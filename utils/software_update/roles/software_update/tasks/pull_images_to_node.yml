#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

---

- name: Pull images to node
#  environment:
#    http_proxy: "{{ http_proxy }}"
#    https_proxy: "{{ https_proxy }}"
  block:
    - name: Check if nerdctl is installed on {{ target_node }}
      ansible.builtin.command: "which nerdctl"
      register: nerdctl_check
      delegate_to: "{{ target_node }}"
      changed_when: false
      ignore_errors: true

    - name: Set nerdctl_installed fact
      ansible.builtin.set_fact:
        nerdctl_installed: "{{ nerdctl_check.rc == 0 }}"

    - name: Show warning if nerdctl is not installed on {{ target_node }}
      ansible.builtin.debug:
        msg: "{{ nerdctl_not_found_warning }}"
      when: not nerdctl_installed

    - name: Set images to pull for group {{ current_group_name }}
      ansible.builtin.set_fact:
        images_to_pull: "{{ grouped_packages.grp_pkg_map[current_group_name].image | default([]) }}"

    - name: Pull image using nerdctl on {{ target_node }}
      ansible.builtin.command: "nerdctl pull {{ item }}"
      register: pull_result
      delegate_to: "{{ target_node }}"
      loop: "{{ images_to_pull }}"
      loop_control:
        label: "{{ item }}"
      changed_when: "pull_result.rc == 0"
      failed_when: false
      when: nerdctl_installed and images_to_pull | length > 0

    - name: Collect failed image pulls
      ansible.builtin.set_fact:
        failed_images: >-
          {{ pull_result.results | default([])
             | selectattr('rc', 'defined')
             | selectattr('rc', 'ne', 0)
             | map(attribute='item')
             | list }}

    - name: Fail if any image pulls failed on {{ target_node }}
      ansible.builtin.fail:
        msg: "{{ failed_image_pull_msg }}"
      when: failed_images | length > 0
