# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Enable the service
  ansible.builtin.service:
    name: slurmd
    enabled: true
  register: slurmd_service

- name: Get service path
  ansible.builtin.set_fact:
    slurmd_service_path: "{{ slurmd_service['status']['FragmentPath'] | default(slurmd_service_default_path) }}"

- name: Configless service edits
  when: slurm_installation_type == configless_slurm
  module_defaults:
    community.general.ini_file:
      owner: "{{ root_user }}"
      group: "{{ root_group }}"
      no_extra_spaces: true
  block:
    - name: Edit the service ConditionPathExists
      community.general.ini_file:
        path: "{{ slurmd_service_path }}"
        section: Unit
        option: ConditionPathExists
        state: absent
        mode: "{{ conf_file_mode }}"
      notify:
        - Reload slurmd
        - Restart slurmd

    - name: Edit the service ExecStart
      community.general.ini_file:
        path: "{{ slurmd_service_path }}"
        section: Service
        option: ExecStart
        mode: "{{ conf_file_mode }}"
        value: "/usr/sbin/slurmd -D
         --conf-server {{ (hostvars[groups['slurm_control_node'] | first])['inventory_hostname_short']
         + ':' + (slurm_conf_dict['SlurmctldPort'] | string) }} -s $SLURMD_OPTIONS" # HA
      notify:
        - Reload slurmd
        - Restart slurmd

    - name: Remove environment for configless case
      community.general.ini_file:
        path: "{{ slurmd_service_path }}"
        section: Service
        option: Environment
        state: absent
        mode: "{{ conf_file_mode }}"
      when: not _force_install_nfs
      notify:
        - Reload slurmd
        - Restart slurmd

    - name: Unset env variable
      community.general.ini_file:
        path: "{{ sys_env_path }}"
        option: SLURM_CONF
        state: absent
        mode: "{{ conf_file_mode }}"

- name: NFS share service edits
  when: slurm_installation_type == nfs_share_slurm
  module_defaults:
    community.general.ini_file:
      owner: "{{ root_user }}"
      group: "{{ root_group }}"
      no_extra_spaces: true
  block:
    - name: Edit the service ConditionPathExists
      community.general.ini_file:
        path: "{{ slurmd_service_path }}"
        section: Unit
        option: ConditionPathExists
        state: absent
        value: "{{ slurm_share_prefix }}{{ slurm_config_dir }}/slurm.conf"
        mode: "{{ conf_file_mode }}"
      notify:
        - Reload slurmd
        - Restart slurmd

    - name: Edit the service to fetch specific conf
      community.general.ini_file:
        path: "{{ slurmd_service_path }}"
        section: Service
        option: ExecStart
        value: "/usr/sbin/slurmd -D -f {{ slurm_share_prefix }}{{ slurm_config_dir }}/slurm.conf -s $SLURMD_OPTIONS"
        mode: "{{ conf_file_mode }}"
      notify:
        - Reload slurmd
        - Restart slurmd

    - name: Add environment for nfs case above Execstart
      ansible.builtin.lineinfile:
        path: "{{ slurmd_service_path }}"
        insertbefore: '^ExecStart='
        line: 'Environment="LD_LIBRARY_PATH={{ slurm_share_prefix }}/usr/lib64/"'
        owner: "{{ root_user }}"
        group: "{{ root_group }}"
        mode: "{{ conf_file_mode }}"
      when: _force_install_nfs
      notify:
        - Reload slurmd
        - Restart slurmd

    - name: Set env variable
      community.general.ini_file:
        path: "{{ sys_env_path }}"
        option: SLURM_CONF
        value: "{{ slurm_share_prefix }}{{ slurm_config_dir }}/slurm.conf"
        mode: "{{ conf_file_mode }}"
      notify:
        - Reload slurmd
        - Restart slurmd

    - name: Enable etc enviroment
      ansible.builtin.shell: source {{ sys_env_path }} # noqa: command-instead-of-shell
      changed_when: false
