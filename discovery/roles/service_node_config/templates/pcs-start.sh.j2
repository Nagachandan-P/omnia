# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#!/bin/sh

sleep 10

echo "Corosync and Pacemaker have started. Continuing with the script."
pcs property set stonith-enabled=false
pcs property set no-quorum-policy=ignore
pcs resource defaults update migration-threshold={{ sn_ha_migration_threshold }}
pcs resource defaults update failure-timeout={{ failure_timeout }}

# Constrain preferred active node
{% if active_node is defined %}
# Add a Service Node Virtual IP (VIP) resource
pcs resource create SNVIP IPaddr2 ip={{ active_node.virtual_ip }} cidr_netmask={{ admin_netmask }} \
  nic={{ admin_nic }} op monitor interval={{ monitor_interval_30s }}
# Add SNVIP to group
pcs resource group add {{ pcs_group }} SNVIP

pcs constraint location {{ pcs_group }} prefers {{ active_node.hostname }}=100
{% endif %}

{% if passive_nodes is defined %}
{% for node in passive_nodes %}
pcs constraint location {{ pcs_group }} prefers {{ node.hostname }}=100
{% endfor %}
{% endif %}

# Create xcatd-check resource
pcs resource create XCATD-CHECK ocf:heartbeat:xcatd-remote-check \
  op monitor interval={{ monitor_interval_30s }} timeout={{ timeout_60s }} on-fail=restart \
  op start timeout={{ timeout_60s }} on-fail=restart \
  op stop timeout={{ timeout_60s }} on-fail=block

pcs resource group add {{ pcs_group }}  XCATD-CHECK

if [ -f /opt/omnia/pcs/pcs_telemetry.sh ]; then
    echo "Found pcs_telemetry.sh. Running using bash..."
    bash /opt/omnia/pcs/pcs_telemetry.sh
else
    echo "pcs_telemetry.sh not found in the current directory. Skipping..."
fi

# Stickiness to avoid unnecessary failover
pcs resource defaults resource-stickiness=100
# Enable on boot
pcs cluster enable --all
echo -e "\n PCS Resource Setup completed for Servicenode HA. Current resource status:\n"
pcs status resources
